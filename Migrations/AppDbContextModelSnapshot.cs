// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SixMinApi.Data;

#nullable disable

namespace SixMinApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SixMinApi.Models.AddressModel", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComplexBuilding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suburb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.ToTable("AddressModels");
                });

            modelBuilder.Entity("SixMinApi.Models.BankAccountModel", b =>
                {
                    b.Property<int>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BankId"), 1L, 1);

                    b.Property<string>("AccountHolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebitDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BankId");

                    b.ToTable("BankAccountModels");
                });

            modelBuilder.Entity("SixMinApi.Models.ClientModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<int>("BankAccountBankId")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResidentialAddressAddressId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("BankAccountBankId");

                    b.HasIndex("ResidentialAddressAddressId");

                    b.ToTable("ClientModels");
                });

            modelBuilder.Entity("SixMinApi.Models.DependantModel", b =>
                {
                    b.Property<int>("DependantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DependantId"), 1L, 1);

                    b.Property<int?>("ClientModelUserId1")
                        .HasColumnType("int");

                    b.Property<double>("CoverAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DependantId");

                    b.HasIndex("ClientModelUserId1");

                    b.ToTable("DependantModels");

                    b.HasDiscriminator<string>("Discriminator").HasValue("DependantModel");
                });

            modelBuilder.Entity("SixMinApi.Models.BeneficiaryModel", b =>
                {
                    b.HasBaseType("SixMinApi.Models.DependantModel");

                    b.Property<int?>("ClientModelUserId")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("ClientModelUserId");

                    b.HasDiscriminator().HasValue("BeneficiaryModel");
                });

            modelBuilder.Entity("SixMinApi.Models.ClientModel", b =>
                {
                    b.HasOne("SixMinApi.Models.BankAccountModel", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountBankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SixMinApi.Models.AddressModel", "ResidentialAddress")
                        .WithMany()
                        .HasForeignKey("ResidentialAddressAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");

                    b.Navigation("ResidentialAddress");
                });

            modelBuilder.Entity("SixMinApi.Models.DependantModel", b =>
                {
                    b.HasOne("SixMinApi.Models.ClientModel", null)
                        .WithMany("Dependents")
                        .HasForeignKey("ClientModelUserId1");
                });

            modelBuilder.Entity("SixMinApi.Models.BeneficiaryModel", b =>
                {
                    b.HasOne("SixMinApi.Models.ClientModel", null)
                        .WithMany("Beneficiaries")
                        .HasForeignKey("ClientModelUserId");
                });

            modelBuilder.Entity("SixMinApi.Models.ClientModel", b =>
                {
                    b.Navigation("Beneficiaries");

                    b.Navigation("Dependents");
                });
#pragma warning restore 612, 618
        }
    }
}
